lerp	norx/math.html#lerp.t,untyped,untyped,untyped	math: lerp(a, b, t: untyped): untyped	
initRandom	norx/math.html#initRandom,orxU32	math: initRandom(u32Seed: orxU32)	
getRandomFloat	norx/math.html#getRandomFloat,orxFLOAT,orxFLOAT	math: getRandomFloat(fMin: orxFLOAT; fMax: orxFLOAT): orxFLOAT	
getSteppedRandomFloat	norx/math.html#getSteppedRandomFloat,orxFLOAT,orxFLOAT,orxFLOAT	math: getSteppedRandomFloat(fMin: orxFLOAT; fMax: orxFLOAT; fStep: orxFLOAT): orxFLOAT	
getRandomU32	norx/math.html#getRandomU32,orxU32,orxU32	math: getRandomU32(u32Min: orxU32; u32Max: orxU32): orxU32	
getSteppedRandomU32	norx/math.html#getSteppedRandomU32,orxU32,orxU32,orxU32	math: getSteppedRandomU32(u32Min: orxU32; u32Max: orxU32; u32Step: orxU32): orxU32	
getRandomS32	norx/math.html#getRandomS32,orxS32,orxS32	math: getRandomS32(s32Min: orxS32; s32Max: orxS32): orxS32	
getSteppedRandomS32	norx/math.html#getSteppedRandomS32,orxS32,orxS32,orxS32	math: getSteppedRandomS32(s32Min: orxS32; s32Max: orxS32; s32Step: orxS32): orxS32	
getRandomU64	norx/math.html#getRandomU64,orxU64,orxU64	math: getRandomU64(u64Min: orxU64; u64Max: orxU64): orxU64	
getSteppedRandomU64	norx/math.html#getSteppedRandomU64,orxU64,orxU64,orxU64	math: getSteppedRandomU64(u64Min: orxU64; u64Max: orxU64; u64Step: orxU64): orxU64	
getRandomS64	norx/math.html#getRandomS64,orxS64,orxS64	math: getRandomS64(s64Min: orxS64; s64Max: orxS64): orxS64	
getSteppedRandomS64	norx/math.html#getSteppedRandomS64,orxS64,orxS64,orxS64	math: getSteppedRandomS64(s64Min: orxS64; s64Max: orxS64; s64Step: orxS64): orxS64	
getRandomSeeds	norx/math.html#getRandomSeeds,array[,orxU32]	math: getRandomSeeds(au32Seeds: array[4, orxU32])	
setRandomSeeds	norx/math.html#setRandomSeeds,array[,orxU32]	math: setRandomSeeds(au32Seeds: array[4, orxU32])	
getBitCount	norx/math.html#getBitCount,orxU32	math: getBitCount(u32Value: orxU32): orxU32	
getTrailingZeroCount	norx/math.html#getTrailingZeroCount,orxU32	math: getTrailingZeroCount(u32Value: orxU32): orxU32	
getTrailingZeroCount64	norx/math.html#getTrailingZeroCount64,orxU64	math: getTrailingZeroCount64(u64Value: orxU64): orxU32	
isPowerOfTwo	norx/math.html#isPowerOfTwo,orxU32	math: isPowerOfTwo(u32Value: orxU32): orxBOOL	
getNextPowerOfTwo	norx/math.html#getNextPowerOfTwo,orxU32	math: getNextPowerOfTwo(u32Value: orxU32): orxU32	
smoothStep	norx/math.html#smoothStep,orxFLOAT,orxFLOAT,orxFLOAT	math: smoothStep(fMin: orxFLOAT; fMax: orxFLOAT; fValue: orxFLOAT): orxFLOAT	
smootherStep	norx/math.html#smootherStep,orxFLOAT,orxFLOAT,orxFLOAT	math: smootherStep(fMin: orxFLOAT; fMax: orxFLOAT; fValue: orxFLOAT): orxFLOAT	
orxMATH_KF_SQRT_2	norx/math.html#orxMATH_KF_SQRT_2	math: orxMATH_KF_SQRT_2	
orxMATH_KF_EPSILON	norx/math.html#orxMATH_KF_EPSILON	math: orxMATH_KF_EPSILON	
orxMATH_KF_TINY_EPSILON	norx/math.html#orxMATH_KF_TINY_EPSILON	math: orxMATH_KF_TINY_EPSILON	
orxMATH_KF_2_PI	norx/math.html#orxMATH_KF_2_PI	math: orxMATH_KF_2_PI	
orxMATH_KF_PI	norx/math.html#orxMATH_KF_PI	math: orxMATH_KF_PI	
orxMATH_KF_PI_BY_2	norx/math.html#orxMATH_KF_PI_BY_2	math: orxMATH_KF_PI_BY_2	
orxMATH_KF_PI_BY_4	norx/math.html#orxMATH_KF_PI_BY_4	math: orxMATH_KF_PI_BY_4	
orxMATH_KF_DEG_TO_RAD	norx/math.html#orxMATH_KF_DEG_TO_RAD	math: orxMATH_KF_DEG_TO_RAD	
orxMATH_KF_RAD_TO_DEG	norx/math.html#orxMATH_KF_RAD_TO_DEG	math: orxMATH_KF_RAD_TO_DEG	
round	norx/math.html#round,orxFLOAT	math: round(fOp: orxFLOAT): orxFLOAT	
