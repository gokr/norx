; orx - Tutorial config file
; Should be used with orx v.1.4+

[Display]
; In this example, we use the same size for the screen display than our camera's frustum so as to obtain a 1:1 ratio
ScreenWidth   = @Camera.FrustumWidth
ScreenHeight  = @Camera.FrustumHeight
Title         = Frame Tutorial
; in case of your driver wouldn't honor vsync, « MainClockFrequency = 100 » in [Clock]
; will avoid your CPU to melt.
VSync         = true

[Resource]
Texture = data/object

[Render]
ShowFPS = true
ShowProfiler = false

[Input]
SetList = MainInput

[MainInput]
KEY_ESCAPE  = Quit

MOUSE_LEFT  = RotateLeft
MOUSE_RIGHT = RotateRight
KEY_LSHIFT  = ScaleUp
KEY_LCTRL   = ScaleDown

; this is the default clock, it's always there.
; No need to setup it in your configuration, it is used for internal sync.
[Clock]
; if you want to cap your framerate, without using VSync.
; VSync may or may not work with your graphic driver, especially in Linux.
MainClockFrequency = 100

;[Console]
; Defines the toggle key for activating the in-game console
; cannot remap the console key on $ (only default key , under the ESC one, is working)
;ToggleKey = KEY_$

[Mouse]
ShowCursor = false

[Viewport]
Camera            = Camera
;RelativeSize      = (0.5, 0.5, 0.0)
;RelativePosition  = center bottom
;BackgroundColor   = (128, 0, 128)

[Camera]
FrustumWidth  = 800
FrustumHeight = 600
FrustumFar    = 1.0
FrustumNear   = 0.0
Position      = (0.0, 0.0, -1.0)

[BoxGraphic]
Texture = box.png
Pivot   = center

[ObjectTemplate]
; We will use this as template for all of our displayed objects
Graphic         = BoxGraphic
Scale           = 4.0
AngularVelocity = 180

[Object0@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Position  = (0.0, 0.0, -0.9)

[Object1@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Color     = (255, 0, 0)
Position  = (-100.0, -100.0, 0.0)

[Object2@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Color     = (0, 255, 0)
Position  = (100.0, -100.0, 0.0)

[Object3@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Color     = (0, 0, 255)
Position  = (-100.0, 100.0, 0.0)

[Object4@ObjectTemplate]
; The '@' sign means we inherit our properties from ObjectTemplate ones. We can of course override them locally at will
Position  = (100.0, 100.0, 0.0)
Color     = (255, 255, 0)

[ParentObject]
; This defines an empty object that has no graphic property or any other kind of properties, beside a child list. We'll use it as a parent for two of our four objects (remaining two object are created with code).
ChildList = Object3 # Object4
